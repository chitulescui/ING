trigger: 
 branches:
    include:
      - main
pool:
  name: 'Default'
  demands:
    - agent.name -equals SWK

variables:
- group: pythonDetails
- group: sqlDetails

stages:

- stage: DockerMySql
  jobs:
    - job: DockerMySql
      steps:
        # Checkout repo
        - checkout: self
        # Pull MegaLinter docker image
        - powershell: docker pull mcr.microsoft.com/mssql/server:2017-latest
          displayName: DockerMySql
    - job: StartSql
      steps:
    # Checkout repo
        - checkout: self
        # Pull MegaLinter docker image
        - powershell: docker run --name some-mysql -p 1433:3306 -e "ACCEPT_EULA=Y" -e MYSQL_ROOT_PASSWORD=$(MYSQL_ROOT_PASSWORD) -d mcr.microsoft.com/mssql/server:2017-latest
          displayName: DockerMySql

- stage: Python
  jobs:
  - job: python
    steps:
    - task: PythonScript@0
      inputs:
        scriptSource: 'filePath'
        scriptPath: '$(scriptPath)'
        pythonInterpreter: '$(pythonInterpreter)'
        arguments: --passwd $(MYSQL_ROOT_PASSWORD)
  
         # Run MegaLinter
        # - powershell: |
            # docker run -v $(System.DefaultWorkingDirectory):/tmp/lint -e SYSTEM_ACCESSTOKEN=$(System.AccessToken) -e GIT_AUTHORIZATION_BEARER=$(System.AccessToken) --name MegaLinter oxsecurity/megalinter:latest
          # displayName: Run MegaLinter
        # 
        # Upload MegaLinter reports
        # - task: PublishPipelineArtifact@1
          # condition: succeededOrFailed()
          # displayName: Upload MegaLinter reports
          # inputs:
            # targetPath: "$(System.DefaultWorkingDirectory)/megalinter-reports/"
            # artifactName: MegaLinterReport