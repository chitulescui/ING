trigger: 
 branches:
    include:
      - main
pool:
  name: 'Default'
  demands:
    - agent.name -equals SWK

variables:
- group: pythonDetails
- group: sqlDetails

stages:

- stage: DockerMySql
  jobs:
    # - job: DockerMySql
      # steps:
        # Checkout repo
        # - checkout: self
        # Pull MegaLinter docker image
        # - powershell: docker pull mcr.microsoft.com/mssql/server:2017-latest
          # displayName: DockerMySql
  - job: DockerBuild
    steps:
    - task: Docker@2
      inputs:
        repository: 'ING'
        command: 'build'
        Dockerfile: '**/Dockerfile'
  
  # - job: BuildDocker
    # steps:
      # - checkout: self
      # - powershell: docker build . -t chitulescui/sqlserver
  # - job: StartSql
    # steps:
  # Checkout repo
      # - checkout: self
      # Pull MegaLinter docker image
      # - powershell: docker run --name some-mysql -p $(MYPORT):$(PORT) -e $(ACCEPT_EULA) -e MYSQL_ROOT_PASSWORD=$(MYSQL_ROOT_PASSWORD) -d chitulescui/sqlserver
        # displayName: DockerMySql
    # dependsOn: BuildDocker

# - stage: Python
  # jobs:
  # - job: python
    # steps:
    # - task: PythonScript@0
      # inputs:
        # scriptSource: 'filePath'
        # scriptPath: '$(scriptPath)'
        # pythonInterpreter: '$(pythonInterpreter)'
  # 
  
         # Run MegaLinter
        # - powershell: |
            # docker run -v $(System.DefaultWorkingDirectory):/tmp/lint -e SYSTEM_ACCESSTOKEN=$(System.AccessToken) -e GIT_AUTHORIZATION_BEARER=$(System.AccessToken) --name MegaLinter oxsecurity/megalinter:latest
          # displayName: Run MegaLinter
        # 
        # Upload MegaLinter reports
        # - task: PublishPipelineArtifact@1
          # condition: succeededOrFailed()
          # displayName: Upload MegaLinter reports
          # inputs:
            # targetPath: "$(System.DefaultWorkingDirectory)/megalinter-reports/"
            # artifactName: MegaLinterReport